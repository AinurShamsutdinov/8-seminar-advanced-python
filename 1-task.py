# –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏—Ç —ç—Ç—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –≤—Å–µ
# –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ö–æ–¥–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö: JSON, CSV –∏ Pickle. –ö–∞–∂–¥—ã–π
# —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
#
# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: –≠—Ç–æ —Ñ–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
# –†–∞–∑–º–µ—Ä: –î–ª—è —Ñ–∞–π–ª–æ–≤ - —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö, –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π - —Ä–∞–∑–º–µ—Ä, —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –±–∞–π—Ç–∞—Ö.
# –í–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏:
#
# –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (–∫–∞–∫ —Ñ–∞–π–ª–æ–≤, —Ç–∞–∫ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π) —É–∫–∞–∂–∏—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
#
# –î–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏—Ö —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö.
#
# –î–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π, –ø–æ–º–∏–º–æ –∏—Ö —Ä–∞–∑–º–µ—Ä–∞, —É—á—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤–Ω—É—Ç—Ä–∏ –¥–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏,
# –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.
#
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π, —á—Ç–æ–±—ã —É—á–µ—Å—Ç—å –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã.
#
# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ç—Ä–µ—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö: JSON, CSV –∏ Pickle. –§–æ—Ä–º–∞—Ç—ã —Ñ–∞–π–ª–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–±–∏—Ä–∞–µ–º—ã–º–∏.
#
# –î–ª—è –æ–±—Ö–æ–¥–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å os.
#
# –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é traverse_directory(directory), –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–±—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å
# —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤–∞—Ä–µ–π. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ç—Ä–µ—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
# (JSON, CSV –∏ Pickle) —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–π save_results_to_json, save_results_to_csv –∏ save_results_to_pickle.
#
# –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫ results –≤ —Ç–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –ø—Ä–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–º –æ–±—Ö–æ–¥–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.
# –ü—Ä–∏ —ç—Ç–æ–º —Å–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —Ñ–∞–π–ª—ã, –∞ –∑–∞—Ç–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
#
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ (name –≤ files), —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É (path = os.path.join(root, name)), –∏ –∑–∞—Ç–µ–º
# –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (size = os.path.getsize(path)). –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫ results –≤ –≤–∏–¥–µ
# —Å–ª–æ–≤–∞—Ä—è {'Path': path, 'Type': 'File', 'Size': size}.
#
# –ó–∞—Ç–µ–º, –¥–ª—è –∫–∞–∂–¥–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (name –≤ dirs), —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (path = os.path.join(root, name)),
# –∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è get_dir_size(path), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –≤—Å–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —É—á–µ—Ç–æ–º –µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫ results –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è {'Path': path, 'Type': 'Directory', 'Size': size}.


########################################################################################################################
# old task
# –ó–∞–¥–∞–Ω–∏–µ
# üìå –†–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å–ø–µ–ª–∏ —Ä–µ—à–∏—Ç—å –Ω–∞ —Å–µ–º–∏–Ω–∞—Ä–µ.
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
# –æ–±—Ö–æ–¥–∏—Ç –µ—ë –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–∞–π–ª—ã json, csv –∏ pickle.
# ‚óã –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
# ‚óã –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª —ç—Ç–æ –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
# ‚óã –î–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö, –∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –≤ –Ω–µ–π
#   —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.
# üìå –°–æ–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–∫–µ –∏ –≤ —Ä–∞–º–∫–∞—Ö –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤.

# –û–∂–∏–¥–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç:
#
# [{'Path': 'geekbrains/california_housing_train.csv', 'Type': 'File', 'Size': 1457}, {'Path': 'geekbrains/student_performance.txt', 'Type': 'File', 'Size': 21}, {'Path': 'geekbrains/covid.json', 'Type': 'File', 'Size': 35228079}, {'Path': 'geekbrains/input2.txt', 'Type': 'File', 'Size': 9}, {'Path': 'geekbrains/avg_list.txt', 'Type': 'File', 'Size': 21}, {'Path': 'geekbrains/age_report.csv', 'Type': 'File', 'Size': 85}, {'Path': 'geekbrains/my_ds_projects', 'Type': 'Directory', 'Size': 171}, {'Path': 'geekbrains/my_ds_projects/My-code', 'Type': 'Directory', 'Size': 171}, {'Path': 'geekbrains/my_ds_projects/My-code/GB_data', 'Type': 'Directory', 'Size': 171}, {'Path': 'geekbrains/my_ds_projects/My-code/GB_data/fruits.csv', 'Type': 'File', 'Size': 101}, {'Path': 'geekbrains/my_ds_projects/My-code/GB_data/list_of_names.txt', 'Type': 'File', 'Size': 70}]
#
# –í–∞—à –æ—Ç–≤–µ—Ç:
#
# [{'Path': 'geekbrains/california_housing_train.csv', 'Type': 'File', 'Size': 1457}, {'Path': 'geekbrains/student_performance.txt', 'Type': 'File', 'Size': 21}, {'Path': 'geekbrains/my_ds_projects', 'Type': 'Directory', 'Size': 171}, {'Path': 'geekbrains/covid.json', 'Type': 'File', 'Size': 35228079}, {'Path': 'geekbrains/input2.txt', 'Type': 'File', 'Size': 9}, {'Path': 'geekbrains/avg_list.txt', 'Type': 'File', 'Size': 21}, {'Path': 'geekbrains/age_report.csv', 'Type': 'File', 'Size': 85}, {'Path': 'my_ds_projects/My-code', 'Type': 'Directory', 'Size': 171}, {'Path': 'My-code/GB_data', 'Type': 'Directory', 'Size': 171}, {'Path': 'GB_data/fruits.csv', 'Type': 'File', 'Size': 101}, {'Path': 'GB_data/list_of_names.txt', 'Type': 'File', 'Size': 70}]
#


import csv
import json
import os
import pathlib
import pickle


TYPE_FILE = 'File'
TYPE_DIRECTORY = 'Directory'
PATH = 'Path'
TYPE = 'Type'
SIZE = 'Size'


def traverse_directory(path):
    files = pathlib.Path(path)
    directory = list()
    for file in files.rglob('*'):
        files_dict = dict()
        basename = os.path.basename(file)  # parent directory
        parent_name = file.parent.name  # get tail from path
        parent_file_name = os.path.join(parent_name, basename)  # parent directory
        is_dir = os.path.isdir(file)
        type_of_file: str = TYPE_FILE
        size: int = int()
        if is_dir:
            for path, dirs, files in os.walk(file):
                for f in files:
                    fp = os.path.join(path, f)
                    size += os.path.getsize(fp)
            type_of_file = TYPE_DIRECTORY
        else:
            size = os.path.getsize(file)
        files_dict[PATH] = parent_file_name
        files_dict[TYPE] = type_of_file
        files_dict[SIZE] = size
        directory.append(files_dict)
    return directory


def save_results_to_json(directories, file_name=None):
    f_json = open(file_name, 'w', encoding='utf-8')
    json.dump(directories, f_json, ensure_ascii=False, indent=2)


def save_results_to_csv(directories, file_name=None):
    f_csv = open(file_name, 'w', newline='', encoding='utf-8')
    csv_writer = csv.writer(f_csv, dialect='excel', delimiter=';')
    for index, f_item in enumerate(directories):
        if index == 0:
            head = list(f_item.keys())
            csv_writer.writerow(head)
        csv_writer.writerow([f_item[PATH], f_item[TYPE], f_item[SIZE]])


def save_results_to_pickle(directories, file_name=None):
    f_pickle = open(file_name, 'wb')
    pickle.dump(directories, f_pickle)


path_to_directorie = os.getcwd()
directories = traverse_directory(path_to_directorie)
save_results_to_json(directories, 'directories-JSON.json')
save_results_to_csv(directories, 'directories-CSV.csv')
save_results_to_pickle(directories, 'directories-PICKLE.pickle')
